/* 
 * Algebratec API
 *
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// HotelCancellationResponseBookingHotelRooms
    /// </summary>
    [DataContract]
        public partial class HotelCancellationResponseBookingHotelRooms :  IEquatable<HotelCancellationResponseBookingHotelRooms>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HotelCancellationResponseBookingHotelRooms" /> class.
        /// </summary>
        /// <param name="code">code.</param>
        /// <param name="name">name.</param>
        /// <param name="rateComment">rateComment.</param>
        /// <param name="boardName">boardName.</param>
        /// <param name="boardCode">boardCode.</param>
        /// <param name="price">price.</param>
        /// <param name="adults">adults.</param>
        /// <param name="children">children.</param>
        /// <param name="cancellationPolicies">cancellationPolicies.</param>
        /// <param name="paxes">paxes.</param>
        public HotelCancellationResponseBookingHotelRooms(string code = default(string), string name = default(string), string rateComment = default(string), string boardName = default(string), string boardCode = default(string), int? price = default(int?), int? adults = default(int?), int? children = default(int?), List<CancellationPolicy> cancellationPolicies = default(List<CancellationPolicy>), List<HotelConfirmationResponseBookingHotelPaxes> paxes = default(List<HotelConfirmationResponseBookingHotelPaxes>))
        {
            this.Code = code;
            this.Name = name;
            this.RateComment = rateComment;
            this.BoardName = boardName;
            this.BoardCode = boardCode;
            this.Price = price;
            this.Adults = adults;
            this.Children = children;
            this.CancellationPolicies = cancellationPolicies;
            this.Paxes = paxes;
        }
        
        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name="code", EmitDefaultValue=false)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets RateComment
        /// </summary>
        [DataMember(Name="rateComment", EmitDefaultValue=false)]
        public string RateComment { get; set; }

        /// <summary>
        /// Gets or Sets BoardName
        /// </summary>
        [DataMember(Name="boardName", EmitDefaultValue=false)]
        public string BoardName { get; set; }

        /// <summary>
        /// Gets or Sets BoardCode
        /// </summary>
        [DataMember(Name="boardCode", EmitDefaultValue=false)]
        public string BoardCode { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name="price", EmitDefaultValue=false)]
        public int? Price { get; set; }

        /// <summary>
        /// Gets or Sets Adults
        /// </summary>
        [DataMember(Name="adults", EmitDefaultValue=false)]
        public int? Adults { get; set; }

        /// <summary>
        /// Gets or Sets Children
        /// </summary>
        [DataMember(Name="children", EmitDefaultValue=false)]
        public int? Children { get; set; }

        /// <summary>
        /// Gets or Sets CancellationPolicies
        /// </summary>
        [DataMember(Name="cancellationPolicies", EmitDefaultValue=false)]
        public List<CancellationPolicy> CancellationPolicies { get; set; }

        /// <summary>
        /// Gets or Sets Paxes
        /// </summary>
        [DataMember(Name="paxes", EmitDefaultValue=false)]
        public List<HotelConfirmationResponseBookingHotelPaxes> Paxes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class HotelCancellationResponseBookingHotelRooms {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  RateComment: ").Append(RateComment).Append("\n");
            sb.Append("  BoardName: ").Append(BoardName).Append("\n");
            sb.Append("  BoardCode: ").Append(BoardCode).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  Adults: ").Append(Adults).Append("\n");
            sb.Append("  Children: ").Append(Children).Append("\n");
            sb.Append("  CancellationPolicies: ").Append(CancellationPolicies).Append("\n");
            sb.Append("  Paxes: ").Append(Paxes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as HotelCancellationResponseBookingHotelRooms);
        }

        /// <summary>
        /// Returns true if HotelCancellationResponseBookingHotelRooms instances are equal
        /// </summary>
        /// <param name="input">Instance of HotelCancellationResponseBookingHotelRooms to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(HotelCancellationResponseBookingHotelRooms input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.RateComment == input.RateComment ||
                    (this.RateComment != null &&
                    this.RateComment.Equals(input.RateComment))
                ) && 
                (
                    this.BoardName == input.BoardName ||
                    (this.BoardName != null &&
                    this.BoardName.Equals(input.BoardName))
                ) && 
                (
                    this.BoardCode == input.BoardCode ||
                    (this.BoardCode != null &&
                    this.BoardCode.Equals(input.BoardCode))
                ) && 
                (
                    this.Price == input.Price ||
                    (this.Price != null &&
                    this.Price.Equals(input.Price))
                ) && 
                (
                    this.Adults == input.Adults ||
                    (this.Adults != null &&
                    this.Adults.Equals(input.Adults))
                ) && 
                (
                    this.Children == input.Children ||
                    (this.Children != null &&
                    this.Children.Equals(input.Children))
                ) && 
                (
                    this.CancellationPolicies == input.CancellationPolicies ||
                    this.CancellationPolicies != null &&
                    input.CancellationPolicies != null &&
                    this.CancellationPolicies.SequenceEqual(input.CancellationPolicies)
                ) && 
                (
                    this.Paxes == input.Paxes ||
                    this.Paxes != null &&
                    input.Paxes != null &&
                    this.Paxes.SequenceEqual(input.Paxes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.RateComment != null)
                    hashCode = hashCode * 59 + this.RateComment.GetHashCode();
                if (this.BoardName != null)
                    hashCode = hashCode * 59 + this.BoardName.GetHashCode();
                if (this.BoardCode != null)
                    hashCode = hashCode * 59 + this.BoardCode.GetHashCode();
                if (this.Price != null)
                    hashCode = hashCode * 59 + this.Price.GetHashCode();
                if (this.Adults != null)
                    hashCode = hashCode * 59 + this.Adults.GetHashCode();
                if (this.Children != null)
                    hashCode = hashCode * 59 + this.Children.GetHashCode();
                if (this.CancellationPolicies != null)
                    hashCode = hashCode * 59 + this.CancellationPolicies.GetHashCode();
                if (this.Paxes != null)
                    hashCode = hashCode * 59 + this.Paxes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
