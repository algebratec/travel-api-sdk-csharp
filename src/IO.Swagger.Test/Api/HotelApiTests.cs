/* 
 * Algebratec API
 *
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing HotelApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class HotelApiTests
    {
        private HotelApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new HotelApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of HotelApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' HotelApi
            //Assert.IsInstanceOfType(typeof(HotelApi), instance, "instance is a HotelApi");
        }

        /// <summary>
        /// Test HotelAvailability
        /// </summary>
        [Test]
        public void HotelAvailabilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HotelAvailabilityRequest body = null;
            //var response = instance.HotelAvailability(body);
            //Assert.IsInstanceOf<HotelAvailabilityResponse> (response, "response is HotelAvailabilityResponse");
        }
        /// <summary>
        /// Test HotelBookingCancellation
        /// </summary>
        [Test]
        public void HotelBookingCancellationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reference = null;
            //bool? SIMULATION = null;
            //string language = null;
            //var response = instance.HotelBookingCancellation(reference, SIMULATION, language);
            //Assert.IsInstanceOf<HotelCancellationResponse> (response, "response is HotelCancellationResponse");
        }
        /// <summary>
        /// Test HotelBookingConfirmation
        /// </summary>
        [Test]
        public void HotelBookingConfirmationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HotelConfirmationRequest body = null;
            //var response = instance.HotelBookingConfirmation(body);
            //Assert.IsInstanceOf<HotelConfirmationResponse> (response, "response is HotelConfirmationResponse");
        }
        /// <summary>
        /// Test HotelCheckRate
        /// </summary>
        [Test]
        public void HotelCheckRateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //HotelCheckRatesRequest body = null;
            //var response = instance.HotelCheckRate(body);
            //Assert.IsInstanceOf<HotelCheckRatesResponse> (response, "response is HotelCheckRatesResponse");
        }
        /// <summary>
        /// Test HotelRetrieveBooking
        /// </summary>
        [Test]
        public void HotelRetrieveBookingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reference = null;
            //string language = null;
            //var response = instance.HotelRetrieveBooking(reference, language);
            //Assert.IsInstanceOf<HotelRetrieveBookingResponse> (response, "response is HotelRetrieveBookingResponse");
        }
    }

}
