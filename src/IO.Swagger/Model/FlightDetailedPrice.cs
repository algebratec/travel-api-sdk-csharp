/* 
 * Algebratec API
 *
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// FlightDetailedPrice
    /// </summary>
    [DataContract]
        public partial class FlightDetailedPrice :  IEquatable<FlightDetailedPrice>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FlightDetailedPrice" /> class.
        /// </summary>
        /// <param name="adtPrice">adtPrice.</param>
        /// <param name="chdPrice">chdPrice.</param>
        /// <param name="infPrice">infPrice.</param>
        /// <param name="insPrice">insPrice.</param>
        /// <param name="srcPrice">srcPrice.</param>
        /// <param name="ythPrice">ythPrice.</param>
        /// <param name="currency">currency.</param>
        /// <param name="agencyFees">agencyFees.</param>
        /// <param name="agencyFeesPerPax">agencyFeesPerPax.</param>
        /// <param name="agencyMarkup">agencyMarkup.</param>
        /// <param name="baseFare">baseFare.</param>
        /// <param name="paxNumber">paxNumber.</param>
        /// <param name="platformFees">platformFees.</param>
        /// <param name="platformFeesPerPax">platformFeesPerPax.</param>
        /// <param name="platformMarkup">platformMarkup.</param>
        /// <param name="serviceAmountPerPax">serviceAmountPerPax.</param>
        /// <param name="serviceFees">serviceFees.</param>
        /// <param name="tax">tax.</param>
        /// <param name="total">total.</param>
        /// <param name="totalInRequestedCurrency">totalInRequestedCurrency.</param>
        /// <param name="totalPlatform">totalPlatform.</param>
        /// <param name="totalProvider">totalProvider.</param>
        public FlightDetailedPrice(FlightPaxTypePrice adtPrice = default(FlightPaxTypePrice), FlightPaxTypePrice chdPrice = default(FlightPaxTypePrice), FlightPaxTypePrice infPrice = default(FlightPaxTypePrice), FlightPaxTypePrice insPrice = default(FlightPaxTypePrice), FlightPaxTypePrice srcPrice = default(FlightPaxTypePrice), FlightPaxTypePrice ythPrice = default(FlightPaxTypePrice), string currency = default(string), int? agencyFees = default(int?), int? agencyFeesPerPax = default(int?), decimal? agencyMarkup = default(decimal?), int? baseFare = default(int?), int? paxNumber = default(int?), int? platformFees = default(int?), int? platformFeesPerPax = default(int?), decimal? platformMarkup = default(decimal?), int? serviceAmountPerPax = default(int?), int? serviceFees = default(int?), int? tax = default(int?), int? total = default(int?), int? totalInRequestedCurrency = default(int?), decimal? totalPlatform = default(decimal?), decimal? totalProvider = default(decimal?))
        {
            this.AdtPrice = adtPrice;
            this.ChdPrice = chdPrice;
            this.InfPrice = infPrice;
            this.InsPrice = insPrice;
            this.SrcPrice = srcPrice;
            this.YthPrice = ythPrice;
            this.Currency = currency;
            this.AgencyFees = agencyFees;
            this.AgencyFeesPerPax = agencyFeesPerPax;
            this.AgencyMarkup = agencyMarkup;
            this.BaseFare = baseFare;
            this.PaxNumber = paxNumber;
            this.PlatformFees = platformFees;
            this.PlatformFeesPerPax = platformFeesPerPax;
            this.PlatformMarkup = platformMarkup;
            this.ServiceAmountPerPax = serviceAmountPerPax;
            this.ServiceFees = serviceFees;
            this.Tax = tax;
            this.Total = total;
            this.TotalInRequestedCurrency = totalInRequestedCurrency;
            this.TotalPlatform = totalPlatform;
            this.TotalProvider = totalProvider;
        }
        
        /// <summary>
        /// Gets or Sets AdtPrice
        /// </summary>
        [DataMember(Name="adt_price", EmitDefaultValue=false)]
        public FlightPaxTypePrice AdtPrice { get; set; }

        /// <summary>
        /// Gets or Sets ChdPrice
        /// </summary>
        [DataMember(Name="chd_price", EmitDefaultValue=false)]
        public FlightPaxTypePrice ChdPrice { get; set; }

        /// <summary>
        /// Gets or Sets InfPrice
        /// </summary>
        [DataMember(Name="inf_price", EmitDefaultValue=false)]
        public FlightPaxTypePrice InfPrice { get; set; }

        /// <summary>
        /// Gets or Sets InsPrice
        /// </summary>
        [DataMember(Name="ins_price", EmitDefaultValue=false)]
        public FlightPaxTypePrice InsPrice { get; set; }

        /// <summary>
        /// Gets or Sets SrcPrice
        /// </summary>
        [DataMember(Name="src_price", EmitDefaultValue=false)]
        public FlightPaxTypePrice SrcPrice { get; set; }

        /// <summary>
        /// Gets or Sets YthPrice
        /// </summary>
        [DataMember(Name="yth_price", EmitDefaultValue=false)]
        public FlightPaxTypePrice YthPrice { get; set; }

        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        [DataMember(Name="currency", EmitDefaultValue=false)]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or Sets AgencyFees
        /// </summary>
        [DataMember(Name="agency_fees", EmitDefaultValue=false)]
        public int? AgencyFees { get; set; }

        /// <summary>
        /// Gets or Sets AgencyFeesPerPax
        /// </summary>
        [DataMember(Name="agency_fees_per_pax", EmitDefaultValue=false)]
        public int? AgencyFeesPerPax { get; set; }

        /// <summary>
        /// Gets or Sets AgencyMarkup
        /// </summary>
        [DataMember(Name="agency_markup", EmitDefaultValue=false)]
        public decimal? AgencyMarkup { get; set; }

        /// <summary>
        /// Gets or Sets BaseFare
        /// </summary>
        [DataMember(Name="base_fare", EmitDefaultValue=false)]
        public int? BaseFare { get; set; }

        /// <summary>
        /// Gets or Sets PaxNumber
        /// </summary>
        [DataMember(Name="pax_number", EmitDefaultValue=false)]
        public int? PaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets PlatformFees
        /// </summary>
        [DataMember(Name="platform_fees", EmitDefaultValue=false)]
        public int? PlatformFees { get; set; }

        /// <summary>
        /// Gets or Sets PlatformFeesPerPax
        /// </summary>
        [DataMember(Name="platform_fees_per_pax", EmitDefaultValue=false)]
        public int? PlatformFeesPerPax { get; set; }

        /// <summary>
        /// Gets or Sets PlatformMarkup
        /// </summary>
        [DataMember(Name="platform_markup", EmitDefaultValue=false)]
        public decimal? PlatformMarkup { get; set; }

        /// <summary>
        /// Gets or Sets ServiceAmountPerPax
        /// </summary>
        [DataMember(Name="service_amount_per_pax", EmitDefaultValue=false)]
        public int? ServiceAmountPerPax { get; set; }

        /// <summary>
        /// Gets or Sets ServiceFees
        /// </summary>
        [DataMember(Name="service_fees", EmitDefaultValue=false)]
        public int? ServiceFees { get; set; }

        /// <summary>
        /// Gets or Sets Tax
        /// </summary>
        [DataMember(Name="tax", EmitDefaultValue=false)]
        public int? Tax { get; set; }

        /// <summary>
        /// Gets or Sets Total
        /// </summary>
        [DataMember(Name="total", EmitDefaultValue=false)]
        public int? Total { get; set; }

        /// <summary>
        /// Gets or Sets TotalInRequestedCurrency
        /// </summary>
        [DataMember(Name="total_in_requested_currency", EmitDefaultValue=false)]
        public int? TotalInRequestedCurrency { get; set; }

        /// <summary>
        /// Gets or Sets TotalPlatform
        /// </summary>
        [DataMember(Name="total_platform", EmitDefaultValue=false)]
        public decimal? TotalPlatform { get; set; }

        /// <summary>
        /// Gets or Sets TotalProvider
        /// </summary>
        [DataMember(Name="total_provider", EmitDefaultValue=false)]
        public decimal? TotalProvider { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FlightDetailedPrice {\n");
            sb.Append("  AdtPrice: ").Append(AdtPrice).Append("\n");
            sb.Append("  ChdPrice: ").Append(ChdPrice).Append("\n");
            sb.Append("  InfPrice: ").Append(InfPrice).Append("\n");
            sb.Append("  InsPrice: ").Append(InsPrice).Append("\n");
            sb.Append("  SrcPrice: ").Append(SrcPrice).Append("\n");
            sb.Append("  YthPrice: ").Append(YthPrice).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  AgencyFees: ").Append(AgencyFees).Append("\n");
            sb.Append("  AgencyFeesPerPax: ").Append(AgencyFeesPerPax).Append("\n");
            sb.Append("  AgencyMarkup: ").Append(AgencyMarkup).Append("\n");
            sb.Append("  BaseFare: ").Append(BaseFare).Append("\n");
            sb.Append("  PaxNumber: ").Append(PaxNumber).Append("\n");
            sb.Append("  PlatformFees: ").Append(PlatformFees).Append("\n");
            sb.Append("  PlatformFeesPerPax: ").Append(PlatformFeesPerPax).Append("\n");
            sb.Append("  PlatformMarkup: ").Append(PlatformMarkup).Append("\n");
            sb.Append("  ServiceAmountPerPax: ").Append(ServiceAmountPerPax).Append("\n");
            sb.Append("  ServiceFees: ").Append(ServiceFees).Append("\n");
            sb.Append("  Tax: ").Append(Tax).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  TotalInRequestedCurrency: ").Append(TotalInRequestedCurrency).Append("\n");
            sb.Append("  TotalPlatform: ").Append(TotalPlatform).Append("\n");
            sb.Append("  TotalProvider: ").Append(TotalProvider).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FlightDetailedPrice);
        }

        /// <summary>
        /// Returns true if FlightDetailedPrice instances are equal
        /// </summary>
        /// <param name="input">Instance of FlightDetailedPrice to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FlightDetailedPrice input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AdtPrice == input.AdtPrice ||
                    (this.AdtPrice != null &&
                    this.AdtPrice.Equals(input.AdtPrice))
                ) && 
                (
                    this.ChdPrice == input.ChdPrice ||
                    (this.ChdPrice != null &&
                    this.ChdPrice.Equals(input.ChdPrice))
                ) && 
                (
                    this.InfPrice == input.InfPrice ||
                    (this.InfPrice != null &&
                    this.InfPrice.Equals(input.InfPrice))
                ) && 
                (
                    this.InsPrice == input.InsPrice ||
                    (this.InsPrice != null &&
                    this.InsPrice.Equals(input.InsPrice))
                ) && 
                (
                    this.SrcPrice == input.SrcPrice ||
                    (this.SrcPrice != null &&
                    this.SrcPrice.Equals(input.SrcPrice))
                ) && 
                (
                    this.YthPrice == input.YthPrice ||
                    (this.YthPrice != null &&
                    this.YthPrice.Equals(input.YthPrice))
                ) && 
                (
                    this.Currency == input.Currency ||
                    (this.Currency != null &&
                    this.Currency.Equals(input.Currency))
                ) && 
                (
                    this.AgencyFees == input.AgencyFees ||
                    (this.AgencyFees != null &&
                    this.AgencyFees.Equals(input.AgencyFees))
                ) && 
                (
                    this.AgencyFeesPerPax == input.AgencyFeesPerPax ||
                    (this.AgencyFeesPerPax != null &&
                    this.AgencyFeesPerPax.Equals(input.AgencyFeesPerPax))
                ) && 
                (
                    this.AgencyMarkup == input.AgencyMarkup ||
                    (this.AgencyMarkup != null &&
                    this.AgencyMarkup.Equals(input.AgencyMarkup))
                ) && 
                (
                    this.BaseFare == input.BaseFare ||
                    (this.BaseFare != null &&
                    this.BaseFare.Equals(input.BaseFare))
                ) && 
                (
                    this.PaxNumber == input.PaxNumber ||
                    (this.PaxNumber != null &&
                    this.PaxNumber.Equals(input.PaxNumber))
                ) && 
                (
                    this.PlatformFees == input.PlatformFees ||
                    (this.PlatformFees != null &&
                    this.PlatformFees.Equals(input.PlatformFees))
                ) && 
                (
                    this.PlatformFeesPerPax == input.PlatformFeesPerPax ||
                    (this.PlatformFeesPerPax != null &&
                    this.PlatformFeesPerPax.Equals(input.PlatformFeesPerPax))
                ) && 
                (
                    this.PlatformMarkup == input.PlatformMarkup ||
                    (this.PlatformMarkup != null &&
                    this.PlatformMarkup.Equals(input.PlatformMarkup))
                ) && 
                (
                    this.ServiceAmountPerPax == input.ServiceAmountPerPax ||
                    (this.ServiceAmountPerPax != null &&
                    this.ServiceAmountPerPax.Equals(input.ServiceAmountPerPax))
                ) && 
                (
                    this.ServiceFees == input.ServiceFees ||
                    (this.ServiceFees != null &&
                    this.ServiceFees.Equals(input.ServiceFees))
                ) && 
                (
                    this.Tax == input.Tax ||
                    (this.Tax != null &&
                    this.Tax.Equals(input.Tax))
                ) && 
                (
                    this.Total == input.Total ||
                    (this.Total != null &&
                    this.Total.Equals(input.Total))
                ) && 
                (
                    this.TotalInRequestedCurrency == input.TotalInRequestedCurrency ||
                    (this.TotalInRequestedCurrency != null &&
                    this.TotalInRequestedCurrency.Equals(input.TotalInRequestedCurrency))
                ) && 
                (
                    this.TotalPlatform == input.TotalPlatform ||
                    (this.TotalPlatform != null &&
                    this.TotalPlatform.Equals(input.TotalPlatform))
                ) && 
                (
                    this.TotalProvider == input.TotalProvider ||
                    (this.TotalProvider != null &&
                    this.TotalProvider.Equals(input.TotalProvider))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AdtPrice != null)
                    hashCode = hashCode * 59 + this.AdtPrice.GetHashCode();
                if (this.ChdPrice != null)
                    hashCode = hashCode * 59 + this.ChdPrice.GetHashCode();
                if (this.InfPrice != null)
                    hashCode = hashCode * 59 + this.InfPrice.GetHashCode();
                if (this.InsPrice != null)
                    hashCode = hashCode * 59 + this.InsPrice.GetHashCode();
                if (this.SrcPrice != null)
                    hashCode = hashCode * 59 + this.SrcPrice.GetHashCode();
                if (this.YthPrice != null)
                    hashCode = hashCode * 59 + this.YthPrice.GetHashCode();
                if (this.Currency != null)
                    hashCode = hashCode * 59 + this.Currency.GetHashCode();
                if (this.AgencyFees != null)
                    hashCode = hashCode * 59 + this.AgencyFees.GetHashCode();
                if (this.AgencyFeesPerPax != null)
                    hashCode = hashCode * 59 + this.AgencyFeesPerPax.GetHashCode();
                if (this.AgencyMarkup != null)
                    hashCode = hashCode * 59 + this.AgencyMarkup.GetHashCode();
                if (this.BaseFare != null)
                    hashCode = hashCode * 59 + this.BaseFare.GetHashCode();
                if (this.PaxNumber != null)
                    hashCode = hashCode * 59 + this.PaxNumber.GetHashCode();
                if (this.PlatformFees != null)
                    hashCode = hashCode * 59 + this.PlatformFees.GetHashCode();
                if (this.PlatformFeesPerPax != null)
                    hashCode = hashCode * 59 + this.PlatformFeesPerPax.GetHashCode();
                if (this.PlatformMarkup != null)
                    hashCode = hashCode * 59 + this.PlatformMarkup.GetHashCode();
                if (this.ServiceAmountPerPax != null)
                    hashCode = hashCode * 59 + this.ServiceAmountPerPax.GetHashCode();
                if (this.ServiceFees != null)
                    hashCode = hashCode * 59 + this.ServiceFees.GetHashCode();
                if (this.Tax != null)
                    hashCode = hashCode * 59 + this.Tax.GetHashCode();
                if (this.Total != null)
                    hashCode = hashCode * 59 + this.Total.GetHashCode();
                if (this.TotalInRequestedCurrency != null)
                    hashCode = hashCode * 59 + this.TotalInRequestedCurrency.GetHashCode();
                if (this.TotalPlatform != null)
                    hashCode = hashCode * 59 + this.TotalPlatform.GetHashCode();
                if (this.TotalProvider != null)
                    hashCode = hashCode * 59 + this.TotalProvider.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
